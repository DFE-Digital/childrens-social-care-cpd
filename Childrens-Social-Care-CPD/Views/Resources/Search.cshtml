@using Childrens_Social_Care_CPD.Configuration
@using Childrens_Social_Care_CPD.Core.Resources;
@using Childrens_Social_Care_CPD.Models;
@using Microsoft.AspNetCore.Html

@model ResourcesListViewModel

@inject IFeaturesConfig featuresConfig

@{
    Layout = "_SearchPageLayout";
}

@section PageBanner {
    <partial name="_PageBanner" model="Model.Content" />
}

@section SearchCriteria {


    @if (featuresConfig.IsEnabled(Features.ResourcesUseDynamicTags))
    {
        <gds-filter clear-filters-uri="/resources-learning" sort-order="@Model.SortOrder">
            <partial name="_SortSelection" model="@Model" />
            
            @{
                var groups = Model.TagInfos.GroupBy(x => x.Category);
                var index = 1; // gov uk js requires starting at 1 for this control
                foreach (var group in groups)
                {
                    <gds-filter-category title="@group.Key" index="@index">
                        @foreach (var tagInfo in group)
                        {
                            var isChecked = Model.SelectedTags.Contains(tagInfo.TagName);
                            <gds-filter-checkbox id="tag-@tagInfo.TagName" name="tags" checked="@isChecked" value="@tagInfo.TagName">
                                @tagInfo.DisplayName
                            </gds-filter-checkbox>
                        }
                    </gds-filter-category>
                    index++;
                }
            }
            
        </gds-filter>
    }
    else
    {
        var tagsDict = new Dictionary<int, TagInfo>(Model.TagInfos.Select((tagInfo, index) => KeyValuePair.Create(index, tagInfo)));
        <gds-filter clear-filters-uri="/resources-learning" sort-order="@Model.SortOrder">
            <partial name="_SortSelection" model="@Model" />
            
        @{
            

            var groupsx = tagsDict.GroupBy(kvp => kvp.Value.Category);
            var index = 1; // gov uk js requires starting at 1 for this control
            foreach (var group in groupsx)
            {
                <gds-filter-category title="@group.Key" index="@index">
                    @foreach (var kvp in group)
                    {
                        var isChecked = Model.SelectedTags.Contains(kvp.Key.ToString());
                        <gds-filter-checkbox id="tag-@kvp.Key" name="tags" checked="@isChecked" value="@kvp.Key">
                            @kvp.Value.DisplayName
                        </gds-filter-checkbox>
                    }
                </gds-filter-category>
                index++;
            }
        }
        </gds-filter>
    }
}

@{
    var resultString = Model.TotalResults == 1 ? "result" : "results";
    @if(Model.SelectedTags.Any())
    {
        <h3>Filtered results</h3>
    }
    else
    {
        <h3>All results</h3>
        <p class="govuk-body-m">No filters have been applied, Showing all results.</p>
        <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
    }
    
    <div class="grid-row pagination-container">
        <div class="column-half">
            @if (Model.TotalResults == 1)
            {
                <span class="summary">
                    Showing 1 of <span id="ResultCount" class="result-count">@Model.TotalResults</span> @resultString
                </span>
            }
            else
            {
                <span class="summary">
                    Showing @Model.StartRecord - @Model.Results.Items.Count of <span id="ResultCount" class="result-count">@Model.TotalResults</span> @resultString
                </span>
            }
        </div>
        <div id="sort-order-placeholder" class="column-half">
        
        </div>
    </div>
    
    <hr />

    if (Model.TotalPages == 0)
    {
        <div class="no-results govuk-!-font-size-19">
            <p class="govuk-body govuk-!-font-weight-bold">There are no matching results.</p>
            <p class="govuk-body">Improve your search results by:</p>
            <ul class="govuk-list govuk-list--bullet">
                <li>adding or removing filters</li>
                @* 
                <li>double-checking your spelling</li>
                <li>using fewer keywords</li>
                <li>searching for something less specific</li>
                *@
            </ul>
        </div>
    }
    else
    {
        foreach (var contentItem in Model.Results.Items)
        {
            var linkedFrom = contentItem.LinkedFrom.ContentCollection.Items.FirstOrDefault();
            if (linkedFrom == null) continue;

            <partial name="_SearchResult" model="contentItem" />
        }

        if (Model.TotalPages > 1)
        {
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-three-quarters">
                    <govuk-pagination url-format-string="@Model.PagingFormatString" page-count=@Model.TotalPages current-page=@Model.CurrentPage />
                </div>
            </div>
        }
    }
}

@if (Model.Results.Items.Any())
{
    @section Scripts {
    <script src="~/javascript/search-sort.js" asp-append-version="true"></script>
    }

}



