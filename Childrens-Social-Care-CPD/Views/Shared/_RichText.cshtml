@using Childrens_Social_Care_CPD.Contentful.Models;
@using Childrens_Social_Care_CPD.Contentful;
@using Contentful.Core.Models;
@using Microsoft.AspNetCore.Html;
@using System.Text;

@model Document

@functions {

    public void RenderList(List list)
    {
        @if (list.Content.Count > 0)
        {
            <ul class="govuk-list govuk-list--bullet">

                @foreach (var link in list.Content)
                {
                    var innerElement = (Paragraph)(((ListItem)link).Content[0]);
                    StringBuilder contentBuilder = new StringBuilder();

                    if (@innerElement.Content.Any(c => c.GetType() == typeof(Hyperlink)))
                    {
                        @foreach (var content in @innerElement.Content)
                        {
                            if (content.GetType() == typeof(Text))
                            {
                                contentBuilder.Append((((Text)content).Value));
                            }
                            if (content.GetType() == typeof(Hyperlink))
                            {
                                var linkElement = ((Hyperlink)content);
                                var linkText = ((Text)(linkElement).Content[0]).Value;
                                contentBuilder.Append(string.Format(("<a href={0}>{1}</a>"), linkElement.Data.Uri, linkText));
                            }
                        }
                    }
                    else
                    {
                        contentBuilder.Append((((Text)innerElement.Content[0]).Value));
                    }
                    <li>@Html.Raw(contentBuilder.ToString())</li>
                }

            </ul>
        }
    }
    
}

@{
    if (Model == null) return;

    foreach (IContent node in Model.Content ?? Enumerable.Empty<IContent>())
    {
        switch (node)
        {
            case HorizontalRuler hr: @hr.ToHtml(); break;
            case Paragraph paragraph: @paragraph.ToHtml(); break;
            case List list: RenderList(list); break;
            case Heading1 heading: @heading.ToHtml(); break;
            case Heading2 heading: @heading.ToHtml(); break;
            case Heading3 heading: @heading.ToHtml(); break;
            case Heading4 heading: @heading.ToHtml(); break;
            case Heading5 heading: @heading.ToHtml(); break;
            case Heading6 heading: @heading.ToHtml(); break;
            case Table table: @table.ToHtml(); break;
            case Quote quote: @quote.ToHtml(); break;
        }
    }
}